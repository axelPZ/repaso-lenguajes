
------------------------se agrega un repositorio de git----------------------------------------------------------------

git init 					 iniciamos el repositorio de git.

git add .    					agrega todos los archivos.

git commit -m "primer commit"	  		crea el primer commit

git push					se agregan los cambios en gitHub cuando ya se haua creado el repositorio

----------------------despues de esto se crea el repositorio en Github y solo se copian los camandos que aparecen ahi-------

-----------------------------------------------------------------------------------------------------------------------------------

---------------------RAMAS de git -----------------------------------------------------------
https://git-scm.com/book/es/v2/Ramificaciones-en-Git-%C2%BFQu%C3%A9-es-una-rama%3F

git branch					listar las ramas, a la que le aparesca un * es en la que nos encontramos

git branch "nombre"				crear una nueva rama

git log --oneline --decorate			ver a que commit apunta cada rama

git checkout "nombre"				cambiar de rama

git push origin "nombre"			para agregar cambios, nombre, es el nombre de la rama

git pull origin "nombre"			para jalar los cambios que hayan agregado en la rama, "nombre"


https://github.com/axelPZ/Nodejs-Myql.git
-----------------------------------------------------------------------------------------------------------------------------------

--------------------- agregar un tag a gitHub--------------------------------------------------

git tag						agregar un tag

git tag -a v1.0.0 -m "( mensaje )"		agregamos la version del tag

git push --tags					agregamos el tag a github


#Nota: se va gitHub en releases precionamos el ("tag") luego presionamos en la ("version") luego presionamos en "editar", 
	se agrega u titulo y una nota, por ultimo precionamos en "public realese"

ya podemos descar gar nuestra version de tags
-------------------------------------------------------------------------------------------------------

git status 					ver el estatus del archivo.

git log  					muestra los commit que se an echo

git checkout --.				regresa todo al ultimo comit

git.config.email  "tu email" 			agrega un email

git.config.name "tu nombre" 			agrega tu nombreg

git reset --soft "mas el id del commit" 	regresammos a un estatus anterior si borrar el siguiente

git reset --hart "mas el id del commit" 	regresamos a un estado aneterior y se borra el siguiente












    

